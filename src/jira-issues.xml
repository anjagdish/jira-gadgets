<?xml version="1.0" encoding="UTF-8"?>
<Module>
	<ModulePrefs
		title="__UP_title__" 
		title_url=""
		directory_title="JIRA Issue Tracking"
		author="Dushan Hanuska" 
		author_email="dushan.hanuska+gadget@gmail.com" 
		author_location="Sydney, New South Wales, Australia" 
		author_photo="http://static.flickr.com/121/buddyicons/97304820@N00.jpg?1159788693"
		author_affiliation="Atlassian Software Systems"
		author_link="http://hanuska.blogspot.com">
		<Require feature="analytics" />
		<Require feature="dynamic-height" />
		<Require feature="setprefs" />
		<Require feature="settitle" />
		<Locale lang="en" country="us" />
	</ModulePrefs>
	<UserPref name="title" display_name="Custom Gadget Title" default_value="JIRA Issues" /> 
	<UserPref name="feedurl" display_name="JIRA XML Feed" default_value="http://jira.atlassian.com/sr/jira.issueviews:searchrequest-xml/temp/SearchRequest.xml?pid=10240&amp;updated%3Aprevious=-1d&amp;sorter/field=updated&amp;sorter/order=DESC" required="true"/>
		<UserPref name="maxfeeditems" display_name="Items Total" datatype="enum" default_value="10" required="true">
	    <EnumValue value="1" display_value="1"/>
	    <EnumValue value="2" display_value="2"/>
	    <EnumValue value="3" display_value="3"/>
	    <EnumValue value="4" display_value="4"/>
	    <EnumValue value="5" display_value="5"/>
	    <EnumValue value="6" display_value="6"/>
	    <EnumValue value="7" display_value="7"/>
	    <EnumValue value="8" display_value="8"/>
	    <EnumValue value="9" display_value="9"/>
	    <EnumValue value="10" display_value="10"/>
	</UserPref>
	<UserPref name="displayIcons" display_name="Display JIRA icons" default_value="true" datatype="bool" required="true" /> 
<Content type="html"><![CDATA[

<style type="text/css">
#footer__MODULE_ID__ {
  color: #808080;
  font-size: x-small;
  text-align: right;
  border-top: 1px solid #5F9ACF;
  margin-top: 0.3em;
}
#footer__MODULE_ID__ a:link, #footer__MODULE_ID__ a:visited {
  color: #808080;
  text-decoration: none;
  outline: none;
}
#footer__MODULE_ID__ a:hover, #footer__MODULE_ID__ a:active {
  color: #808080;
  text-decoration: underline;
  outline: none;
}
.dude img {
  border: 0;
  padding: 0;
  margin-top: 0.3em;
  float: left;
}
.credits {
  float: right;
  margin-top: 0.3em;
}
#jiraissues__MODULE_ID__ {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 12px;
  outline: none;
}
a:link.issueLink, a:visited.issueLink {
  color: #000;
  text-decoration: none;
}
a:hover.issueLink, a:active.issueLink {
  color: #FFF;
  text-decoration: underline;
}
table.issues {
  border-width: 0;
  border-spacing: 0;
  border-style: none;
  border-collapse: collapse;
  padding: 1px 2px 1px 2px;
  padding: 1px 2px 1px 2px;
  width: 100%;
}
table.issues tr th, table.issues tr:hover th {
  padding: 2px 3px 2px 3px;
  text-alight: left;
  font-weight: bold;
  font-size: smaller;
  background-color: #AAA;
  color: #FFF;
}
table.issues tr td {
  padding: 2px 3px 2px 3px;
}
table.issues tr:hover, table.issues tr:hover td a:link {
  background-color: #5F9ACF;
  color: #FFF;
}
.issue {
  vertical-align: top;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 12px;
}
.odd {
  background-color: #FFF;
}
.even {
  background-color: #E8F1FF;
}
.type {
  width: 4%;
  white-space: nowrap;
}
.icon img {
  border: 0;
  padding: 1px 0px 1px 0px;
}
.summary {
  vertical-align: middle;
}
.priority {
  width: 4%;
  white-space: nowrap;
}
</style>

<div id="jiraissues__MODULE_ID__">loading...</div>
<div id="footer__MODULE_ID__">
  <span class="dude"><a href="http://www.atlassian.com/software/jira" target="_blank"><img src="http://dushan.hanuska.googlepages.com/atlassiandude.png" alt="atlassian" /></a><span>
  <span class="credits">Created by <a href="http://hanuska.blogspot.com/" target="_blank">Dushan Hanuska</a>.</span>
</div>
<div id="debug__MODULE_ID__" style="font-size:9pt; padding:5px; color: red;"></div>

<script type="text/javascript">
// Google Analytics
_IG_Analytics("UA-1805882-1", "/jira-issues-gadget");

// Get userprefs
var prefs = new _IG_Prefs(__MODULE_ID__);
var feedurl = prefs.getString("feedurl");
var maxfeeditems = prefs.getInt("maxfeeditems");
var displayIcons = prefs.getBool("displayIcons");

// Get base URL for icons (image locations)
var baseUrl = getBaseUrl(feedurl);

_IG_SetTitle(prefs.getString("title"));

function getBaseUrl(url) {
  // TODO: implement
  return "http://jira.atlassian.com/";
}

function getTypeIcon(id) {
  switch(id) {
    case '1':
      return baseUrl + "images/icons/bug.gif";
    case '2':
      return baseUrl + "images/icons/newfeature.gif";
    case '3':
      return baseUrl + "images/icons/task.gif";
    case '4':
      return baseUrl + "images/icons/improvement.gif";
    case '5':
      return baseUrl + "images/icons/status_generic.gif";
    case '6':
      return baseUrl + "images/icons/issue_subtask.gif";
    case '7':
      return baseUrl + "images/icons/genericissue.gif";
  }
  return baseUrl + "images/icons/genericissue.gif";
}

function getPriorityIcon(id) {
  switch(id) {
    case '1':
      return baseUrl + "images/icons/priority_blocker.gif";
    case '2':
      return baseUrl + "images/icons/priority_critical.gif";
    case '3':
      return baseUrl + "images/icons/priority_major.gif";
    case '4':
      return baseUrl + "images/icons/priority_minor.gif";
    case '5':
      return baseUrl + "images/icons/priority_trivial.gif";
  }
  return null;
}

function truncate(s,l) {
  var trunc = s;
  if (s.length > l) {
    trunc = s.substring(0, l).replace(/\w+$/, '');
    trunc += '<a href="#" ' +
      'onclick="this.parentNode.innerHTML=' +
      'unescape(\''+escape(s)+'\');_IG_AdjustIFrameHeight();return false;">' +
      '...<\/a>';
  }
  return trunc;
}

function processFeed(response)
{
  if (response == null || typeof(response) != "object" || response.firstChild == null) {
    _IG_Analytics("UA-1805882-1", "/jira-issues-gadget/invalid_response");
    _gel("jira_issues").innerHTML = "<i>Invalid data.</i>";
    return;
  }
  // DEBUG: is the function getting called?
  log("Response is valid.<br />");
	
  var html = "";

  // Get a list of the <item> element nodes in the file
  var itemList = response.getElementsByTagName("item");

  // DEBUG: is the function getting called?
  log("Items count: " + itemList.length + '(' + maxfeeditems + ')<br />');
 
  html += '<table class="issues">';
  if (displayIcons == false) {
    html += '<tr><th>Type</th><th>Summary</th><th>Priority</th></tr>'
  }

  // Loop through all <item> nodes
  for (var i = 0; i < itemList.length && i < maxfeeditems; i++) { 
    var key = "";
    var link = null;
    var summary = "";
    var type = "";
    var typeIcon = null;
    var priority = "";
    var priorityIcon = null;
    var status = "";
    var resolution = "";

    // For each <item> node, get child nodes.
    var nodeList = itemList.item(i).childNodes;

    // Loop through child nodes. Extract data from the text nodes that are
    // the children of the associated name, price, and calories element nodes.
    for (var j = 0; j < nodeList.length; j++) {
      var node = nodeList.item(j);
      if (node.nodeName == "key") {
        key = node.firstChild.nodeValue;
      }
      if (node.nodeName == "link") {
        link = node.firstChild.nodeValue;
      }
      if (node.nodeName == "summary") {
        summary = node.firstChild.nodeValue; 
      }
      if (node.nodeName == "type") {
        type = node.firstChild.nodeValue;
        if (displayIcons == true)
        {
          typeIcon = getTypeIcon(node.getAttribute("id"));
        }
      }
      if (node.nodeName == "priority") {
        priority = node.firstChild.nodeValue; 
        if (displayIcons == true)
        {
          priorityIcon = getPriorityIcon(node.getAttribute("id"));
        }
      }
      if (node.nodeName == "status") {
        status = node.firstChild.nodeValue; 
      }
      if (node.nodeName == "resolution") {
        resolution = node.firstChild.nodeValue; 
      }
    }
    
    // Append extracted data to the HTML string.
    html += '<tr class="issue ' + (i % 2 == 0 ? 'even' : 'odd') + '">\n';
    html += '\t<td class="type" title="Type: ' + type + '">';
    if (displayIcons) {
      html += '<span class="icon">' + (typeIcon == null ? '&nbsp;' : '<img src="' + typeIcon + '" alt="' + type + '"/>') + '</span>';
    }
    else {
      html += type;
    }
    html += '</td>\n';
    html += '\t<td class="summary" title="' + key + ': ' + status + ', ' + resolution + '' + '">';
    if (link == null) {
      html += truncate(summary,80);
    }
    else {
      html += '<a class="issueLink" href="' + link + '" target="_blank" onClick="issueClick(); return true;">' + truncate(summary,80) + '</a>';
    }
    html += '</td>\n';
    html += '\t<td class="priority" title="Priority: ' + priority + '">';
    if (displayIcons) {
      html += '<span class="icon">' + (priorityIcon == null ? '&nbsp;' : '<img src="' + priorityIcon + '" title="Priority: ' + priority + '" alt="' + priority + '"/>') + '</span>';
    }
    else {
      html += priority;
    }
    html += '</td>\n';
    html += '</tr>\n';
  }
  html += '</table>';

  _gel("jiraissues__MODULE_ID__").innerHTML = html;
  _IG_AdjustIFrameHeight();
}

function issueClick() {
  _IG_Analytics("UA-1805882-1", "/jira-issues-gadget/issueclick");
}

// debug flag. When its value is non-zero, debugging messages are displayed
var debug = 0;
// The string containing debugging messages
var debug_html = "";
// Outputs debug messages if debug flag has a non-zero value
function log(msg) {      
  if (debug) {
    debug_html += msg;
    // Write debug HTML to div
    _gel("debug__MODULE_ID__").innerHTML = debug_html;
    _IG_AdjustIFrameHeight();
  }
}
_IG_FetchXmlContent(feedurl + "&tempMax=" + __UP_maxfeeditems__, processFeed);
_IG_AdjustIFrameHeight();
</script>
]]></Content>
</Module>